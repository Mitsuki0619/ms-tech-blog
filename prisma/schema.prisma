generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  image     String?
  role      Role     @default(USER)
  posts     Post[]
  blogs     Blog[]
  profile   Profile?
  provider  String   @default("Credentials")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
}

model Blog {
  id                Int                 @id @default(autoincrement())
  title             String
  content           String
  author            User                @relation(fields: [authorId], references: [id])
  authorId          String
  categories        Category[]
  categoriesOnBlogs CategoriesOnBlogs[]
  published         Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  publishedAt       DateTime?
}

model Category {
  id                Int                 @id @default(autoincrement())
  name              String
  blogs             Blog[]
  categoriesOnBlogs CategoriesOnBlogs[]
}

model CategoriesOnBlogs {
  blog       Blog     @relation(fields: [blogId], references: [id])
  blogId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([blogId, categoryId])
}

enum Role {
  USER
  ADMIN
}
